{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFechGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","type","placeholder","value","onChange","e","target","onKeyPress","key","trim","categories","getGifs","category","a","url","encodeURI","fetch","res","json","resData","data","map","img","id","title","images","downsized_medium","console","error","GifGridItem","className","src","alt","substring","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"yOAqCeA,EAlCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAiBzC,OACE,oCACE,2BACEC,KAAK,OACLC,YAAY,kBACZC,MAAOJ,EACPK,SApBe,SAACC,GACpBL,EAAcK,EAAEC,OAAOH,QAoBnBI,WAjBiB,SAACF,GACtB,GAAc,UAAVA,EAAEG,IAAiB,CACrB,GAA0B,KAAtBT,EAAWU,OACb,OAEFZ,GAAc,SAACa,GAAD,OAAiBX,EAAWU,QAA5B,mBAAuCC,OACrDV,EAAc,U,8BChBPW,EAAO,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,4DACN,mCACTC,EAFe,uDACN,mCADM,cAEmDC,UACtEH,IAHmB,kBAMDI,MAAMF,GANL,cAMbG,EANa,gBAOGA,EAAIC,OAPP,cAObC,EAPa,yBAQZA,EAAQC,KAAKC,KAAI,SAACC,GACvB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,SAZlB,kCAgBnBa,QAAQC,MAAR,MAhBmB,0DAAH,sDCWLC,EATK,SAAC,GAAoB,IAAlBL,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC5B,OACE,yBAAKgB,UAAU,0CACb,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,2BAAIA,EAAMS,UAAU,EAAG,IAAvB,SCcSC,EAhBC,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SAAe,ECFN,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCsB,KAAM,GACNe,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAaxC,OAPAC,qBAAU,WACR3B,EAAQC,GAAU2B,MAAK,SAACd,GAAD,OACrBY,EAAS,eAAKD,EAAN,CAAahB,KAAMK,EAAQU,SAAS,UAG7C,IAEIC,EDV2BI,CAAa5B,GAAjCa,EADkB,EACxBL,KAAce,EADU,EACVA,QAEtB,OACE,oCACE,wBAAIL,UAAU,qCAAqClB,GAClDuB,GAAW,uBAAGL,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aACZL,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAad,IAAKc,EAAIC,IAAQD,UEQzBmB,EAjBM,WAAO,IAAD,EACW3C,mBAAS,CAAC,oBADrB,mBAClBY,EADkB,KACNb,EADM,KAGzB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACGa,EAAWW,KAAI,SAACT,GAAD,OACd,kBAAC,EAAD,CAASJ,IAAKI,EAAUA,SAAUA,U,MCT5C8B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,W","file":"static/js/main.11874b76.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      if (inputValue.trim() === \"\") {\r\n        return;\r\n      }\r\n      setCategories((categories) => [inputValue.trim(), ...categories]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search a Gif...\"\r\n        value={inputValue}\r\n        onChange={handleChange}\r\n        onKeyPress={handleKeyPress}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n  const apiKey = \"nHrPmAp5yVwCM0q8gN5BXvIJ1m7Uc8EJ\";\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURI(\r\n    category\r\n  )}`;\r\n  try {\r\n    const res = await fetch(url);\r\n    const resData = await res.json();\r\n    return resData.data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images.downsized_medium.url,\r\n      };\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title.substring(0, 10)}...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFechGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((images) =>\r\n      setState({ ...state, data: images, loading: false })\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"Game Of Thrones\"]);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}